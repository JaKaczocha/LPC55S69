/***********************************************************************************************************************
 * This file was generated by the MCUXpresso Config Tools. Any manual edits made to this file
 * will be overwritten if the respective MCUXpresso Config Tools is used to update this file.
 **********************************************************************************************************************/

#ifndef _PERIPHERALS_H_
#define _PERIPHERALS_H_

/***********************************************************************************************************************
 * Included files
 **********************************************************************************************************************/
#include "fsl_common.h"
#include "fsl_i2c.h"
#include "fsl_rtc.h"
#include "fsl_pint.h"

#if defined(__cplusplus)
extern "C" {
#endif /* __cplusplus */

/***********************************************************************************************************************
 * Definitions
 **********************************************************************************************************************/
/* Definitions for BOARD_InitPeripherals_cm33_core0 functional group */
/* BOARD_InitPeripherals_cm33_core0 defines for FLEXCOMM1 */
/* Definition of peripheral ID */
#define FLEXCOMM1_PERIPHERAL ((I2C_Type *)FLEXCOMM1)
/* Definition of the clock source frequency */
#define FLEXCOMM1_CLOCK_SOURCE 12000000UL
/* Definition of peripheral ID */
#define RTC_PERIPHERAL RTC
/* RTC interrupt vector ID (number). */
#define RTC_IRQN RTC_IRQn
/* RTC interrupt handler identifier. */
#define RTC_IRQHANDLER RTC_IRQHandler
/* BOARD_InitPeripherals_cm33_core0 defines for PINT */
/* Definition of peripheral ID */
#define PINT_PERIPHERAL ((PINT_Type *) PINT_BASE)
/* PINT interrupt vector ID (number). */
#define PINT_PINT_0_IRQN PIN_INT0_IRQn
/* PINT interrupt vector priority. */
#define PINT_PINT_0_IRQ_PRIORITY 0
/* PINT interrupt vector ID (number). */
#define PINT_PINT_2_IRQN PIN_INT2_IRQn
/* PINT interrupt vector priority. */
#define PINT_PINT_2_IRQ_PRIORITY 0
/* Definition of PINT interrupt ID for interrupt 0  */
#define PINT_INT_0 kPINT_PinInt0
/* Definition of PINT interrupt ID for interrupt 2  */
#define PINT_INT_1 kPINT_PinInt2

/***********************************************************************************************************************
 * Global variables
 **********************************************************************************************************************/
extern const i2c_master_config_t FLEXCOMM1_config;
/* Date and time structure */
extern rtc_datetime_t RTC_dateTimeStruct;
/* Alarm date and time structure */
extern rtc_datetime_t RTC_alarmDateTimeStruct;

/***********************************************************************************************************************
 * Callback functions
 **********************************************************************************************************************/
/* INT_0 callback function for the PINT component */
extern void encClockwise(pint_pin_int_t pintr, uint32_t pmatch_status);
/* INT_1 callback function for the PINT component */
extern void encSwitch(pint_pin_int_t pintr, uint32_t pmatch_status);

/***********************************************************************************************************************
 * Initialization functions
 **********************************************************************************************************************/

void BOARD_InitPeripherals_cm33_core0(void);

/***********************************************************************************************************************
 * BOARD_InitBootPeripherals function
 **********************************************************************************************************************/
void BOARD_InitBootPeripherals(void);

#if defined(__cplusplus)
}
#endif

#endif /* _PERIPHERALS_H_ */
